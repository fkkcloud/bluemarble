angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$rootScope","$scope","$window",function(e,c,o){}]),angular.module("app").controller("DataVizCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(){$(".data-visibility").addClass("active")}t(),$("#checkbox_c_all").change(function(){var e=$(this).is(":checked");$("#checkbox_c0").prop("checked",e),$("#checkbox_c0").trigger("change"),$("#checkbox_c1").prop("checked",e),$("#checkbox_c1").trigger("change"),$("#checkbox_c2").prop("checked",e),$("#checkbox_c2").trigger("change"),$("#checkbox_c3").prop("checked",e),$("#checkbox_c3").trigger("change"),$("#checkbox_c4").prop("checked",e),$("#checkbox_c4").trigger("change"),$("#checkbox_c5").prop("checked",e),$("#checkbox_c5").trigger("change"),$("#checkbox_c6").prop("checked",e),$("#checkbox_c6").trigger("change"),$("#checkbox_c7").prop("checked",e),$("#checkbox_c7").trigger("change"),$("#checkbox_c8").prop("checked",e),$("#checkbox_c8").trigger("change"),$("#checkbox_c9").prop("checked",e),$("#checkbox_c9").trigger("change"),$("#checkbox_c10").prop("checked",e),$("#checkbox_c10").trigger("change"),$("#checkbox_c11").prop("checked",e),$("#checkbox_c11").trigger("change"),$("#checkbox_c12").prop("checked",e),$("#checkbox_c12").trigger("change"),$("#checkbox_c13").prop("checked",e),$("#checkbox_c13").trigger("change"),$("#checkbox_c14").prop("checked",e),$("#checkbox_c14").trigger("change"),$("#checkbox_c15").prop("checked",e),$("#checkbox_c15").trigger("change"),$("#checkbox_c16").prop("checked",e),$("#checkbox_c16").trigger("change"),$("#checkbox_c17").prop("checked",e),$("#checkbox_c17").trigger("change")}),$("#checkbox_c0").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(0,!0):trajetManager.toggleShowByCluster(0,!1)}),$("#checkbox_c1").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(1,!0):trajetManager.toggleShowByCluster(1,!1)}),$("#checkbox_c2").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(2,!0):trajetManager.toggleShowByCluster(2,!1)}),$("#checkbox_c3").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(3,!0):trajetManager.toggleShowByCluster(3,!1)}),$("#checkbox_c4").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(4,!0):trajetManager.toggleShowByCluster(4,!1)}),$("#checkbox_c5").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(5,!0):trajetManager.toggleShowByCluster(5,!1)}),$("#checkbox_c6").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(6,!0):trajetManager.toggleShowByCluster(6,!1)}),$("#checkbox_c7").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(7,!0):trajetManager.toggleShowByCluster(7,!1)}),$("#checkbox_c8").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(8,!0):trajetManager.toggleShowByCluster(8,!1)}),$("#checkbox_c9").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(9,!0):trajetManager.toggleShowByCluster(9,!1)}),$("#checkbox_c10").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(10,!0):trajetManager.toggleShowByCluster(10,!1)}),$("#checkbox_c11").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(11,!0):trajetManager.toggleShowByCluster(11,!1)}),$("#checkbox_c12").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(12,!0):trajetManager.toggleShowByCluster(12,!1)}),$("#checkbox_c13").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(13,!0):trajetManager.toggleShowByCluster(13,!1)}),$("#checkbox_c14").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(14,!0):trajetManager.toggleShowByCluster(14,!1)}),$("#checkbox_c15").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(15,!0):trajetManager.toggleShowByCluster(15,!1)}),$("#checkbox_c16").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(16,!0):trajetManager.toggleShowByCluster(16,!1)}),$("#checkbox_c17").change(function(){console.log("checkbox!"),$(this).is(":checked")?trajetManager.toggleShowByCluster(17,!0):trajetManager.toggleShowByCluster(17,!1)})}]),angular.module("app").controller("IntroCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(){$(".data-visibility").removeClass("active")}t();var r=$(".slide"),a=$(".slide-group"),n=$(".bullet"),h=r.length-1,g=0,l=!1;n.first().addClass("current");var s=function(){var e=$(".slide-node").clone();$(".slide-node").html("Loading! If you see this message for a while, please refresh the page"),$(".slide-node").replaceWith(e);var c=$(".slide-lines").clone();$(".slide-lines").html("Loading! If you see this message for a while, please refresh the page"),$(".slide-lines").replaceWith(c)},i=function(){window.clearInterval(d),l=!1;var e=n.index($(this));k(e),s()},k=function(e){l?g===h?g=0:g++:g=e,n.removeClass("current"),n.eq(g).addClass("current"),u(g)},u=function(e){a.animate({top:"-"+e+"00%"}),s()};n.on("click",i);var d=window.setInterval(k,8e4)}]),angular.module("app").controller("NumberCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(e){function c(e,c,o,t,r,a){function n(c){e.html(l(c,u))}function h(e,c){var o=".",t=e+"";if(t.length<c)for(var r=c-t.length,n=0;r>n;n++)t="0"+t;if(3==a){var h=(h=t.length)>3?h%3:0;return(h?t.substr(0,h)+o:"")+t.substr(h).replace(/(\d{3})(?=\d)/g,"$1"+o)}if(4==a){var h=(h=t.length)>4?h%4:0;return(h?t.substr(0,h)+o:"")+t.substr(h).replace(/(\d{4})(?=\d)/g,"$1"+o)}var h=(h=t.length)>2?h%2:0;return(h?t.substr(0,h)+o:"")+t.substr(h).replace(/(\d{2})(?=\d)/g,"$1"+o)}function g(){o++;var e=o/s;e>=1?n(parseInt(c)):(n(parseInt(e*c)),setTimeout(g,k))}function l(e,c){for(var o=h(e,c),t=o.split(""),r=[],a=0;a<t.length;a++)r+="."==t[a]?"<span>.</span>":"<span>"+t[a]+"</span>";return r}var s=100,i=t,o=0,k=i/s,u=(c+"").length;e.html(l(0,u)),setTimeout(g,r)}var o=0,t=parseInt(e.attr("data-num")),r=parseInt(e.attr("time-duration")),a=parseInt(e.attr("time-delay")),n=parseInt(e.attr("format-info"));c(e,t,o,r,a,n)}$("[data-num]").each(function(){t($(this))})}]),angular.module("app").config(["$routeProvider",function(e){e.when("/dataviz",{templateUrl:"/templates/dataviz.html",controller:"DataVizCtrl"}).when("/intro",{templateUrl:"/templates/intro.html",controller:"IntroCtrl"}).otherwise({redirectTo:"/intro"})}]);
//# sourceMappingURL=data:application/json;base64,