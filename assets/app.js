angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$rootScope","$scope","$window",function(e,t,r){}]),angular.module("app").controller("DataVizCtrl",["$rootScope","$scope","$window",function(e,t,r){function n(){$(".data-visibility").addClass("active")}n()}]),angular.module("app").controller("IntroCtrl",["$rootScope","$scope","$window",function(e,t,r){function n(){$(".data-visibility").removeClass("active")}n();var a=$(".slide"),o=$(".slide-group"),l=$(".bullet"),i=a.length-1,s=0,u=!1;l.first().addClass("current");var c=function(){var e=$(".slide-node").clone();$(".slide-node").html("Loading! If you see this message for a while, please refresh the page"),$(".slide-node").replaceWith(e);var t=$(".slide-lines").clone();$(".slide-lines").html("Loading! If you see this message for a while, please refresh the page"),$(".slide-lines").replaceWith(t)},d=function(){window.clearInterval(h),u=!1;var e=l.index($(this));p(e),c()},p=function(e){u?s===i?s=0:s++:s=e,l.removeClass("current"),l.eq(s).addClass("current"),f(s)},f=function(e){o.animate({top:"-"+e+"00%"}),c()};l.on("click",d);var h=window.setInterval(p,8e4)}]),angular.module("app").controller("NumberCtrl",["$rootScope","$scope","$window",function(e,t,r){function n(e){function t(e,t,r,n,a,o){function l(t){e.html(u(t,f))}function i(e,t){var r=".",n=e+"";if(n.length<t)for(var a=t-n.length,l=0;a>l;l++)n="0"+n;if(3==o){var i=(i=n.length)>3?i%3:0;return(i?n.substr(0,i)+r:"")+n.substr(i).replace(/(\d{3})(?=\d)/g,"$1"+r)}if(4==o){var i=(i=n.length)>4?i%4:0;return(i?n.substr(0,i)+r:"")+n.substr(i).replace(/(\d{4})(?=\d)/g,"$1"+r)}var i=(i=n.length)>2?i%2:0;return(i?n.substr(0,i)+r:"")+n.substr(i).replace(/(\d{2})(?=\d)/g,"$1"+r)}function s(){r++;var e=r/c;e>=1?l(parseInt(t)):(l(parseInt(e*t)),setTimeout(s,p))}function u(e,t){for(var r=i(e,t),n=r.split(""),a=[],o=0;o<n.length;o++)a+="."==n[o]?"<span>.</span>":"<span>"+n[o]+"</span>";return a}var c=100,d=n,r=0,p=d/c,f=(t+"").length;e.html(u(0,f)),setTimeout(s,a)}var r=0,n=parseInt(e.attr("data-num")),a=parseInt(e.attr("time-duration")),o=parseInt(e.attr("time-delay")),l=parseInt(e.attr("format-info"));t(e,n,r,a,o,l)}$("[data-num]").each(function(){n($(this))})}]),angular.module("app").config(["$routeProvider",function(e){e.when("/dataviz",{templateUrl:"/templates/dataviz.html",controller:"DataVizCtrl"}).when("/intro",{templateUrl:"/templates/intro.html",controller:"IntroCtrl"}).otherwise({redirectTo:"/intro"})}]);
//# sourceMappingURL=data:application/json;base64,