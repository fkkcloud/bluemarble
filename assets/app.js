angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(){var e=function(){this.AdditiveColor=!0,this.Restart=function(){console.log("restart the web page")}},c=new e,o=new dat.GUI,t=o.add(c,"AdditiveColor");t.onFinishChange(function(e){RenderParams.AdditiveColor=e===!0?!0:!1}),o.add(c,"Restart")}c.meanAge={value:0},c.mergePathIds={value:[0]},c.resetClusters=function(){FRAME.value=0,PAGE_NUM.value=1,c.meanAge=48,TWEEN.removeAll(),EdgeManagerCluster.reset(),NodeManagerCluster.reset()},c.resetMergePaths=function(){FRAME.value=0,PAGE_NUM.value=2,TWEEN.removeAll();for(var e=0;e<NodeManagerMergePaths.length;e++)for(var c=0;c<SELECTED_MERGEPATHIDS.length;c++)SELECTED_MERGEPATHIDS[c]==e&&(NodeManagerMergePaths[e].reset(),EdgeManagerMergePaths[e].reset())},t()}]),angular.module("app").controller("NumberCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(e){function c(e,c,o,t,r,a){function g(c){e.html(l(c,u))}function n(e,c){var o=".",t=e+"";if(t.length<c)for(var r=c-t.length,g=0;r>g;g++)t="0"+t;if(3==a){var n=(n=t.length)>3?n%3:0;return(n?t.substr(0,n)+o:"")+t.substr(n).replace(/(\d{3})(?=\d)/g,"$1"+o)}if(4==a){var n=(n=t.length)>4?n%4:0;return(n?t.substr(0,n)+o:"")+t.substr(n).replace(/(\d{4})(?=\d)/g,"$1"+o)}var n=(n=t.length)>2?n%2:0;return(n?t.substr(0,n)+o:"")+t.substr(n).replace(/(\d{2})(?=\d)/g,"$1"+o)}function h(){o++;var e=o/s;e>=1?g(parseInt(c)):(g(parseInt(e*c)),setTimeout(h,d))}function l(e,c){for(var o=n(e,c),t=o.split(""),r=[],a=0;a<t.length;a++)r+="."==t[a]?"<span>.</span>":"<span>"+t[a]+"</span>";return r}var s=100,i=t,o=0,d=i/s,u=(c+"").length;e.html(l(0,u)),setTimeout(h,r)}var o=0,t=parseInt(e.attr("data-num")),r=parseInt(e.attr("time-duration")),a=parseInt(e.attr("time-delay")),g=parseInt(e.attr("format-info"));c(e,t,o,r,a,g)}$("[data-num]").each(function(){t($(this))})}]),angular.module("app").config(["$routeProvider",function(e){e.when("/mergepaths",{templateUrl:"/templates/mergepaths.html",controller:"MergePathCtrl"}).when("/clusters",{templateUrl:"/templates/clusters.html",controller:"ClusterCtrl"}).when("/intro",{templateUrl:"/templates/intro.html",controller:"IntroCtrl"}).otherwise({redirectTo:"/intro"})}]),angular.module("app").controller("ClusterCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(){PAGE_NUM.value=1}function r(){$(".data-visibility").addClass("active")}t(),r(),c.updateMeanAge=function(){if(!(FRAME.value>400||1!=PAGE_NUM.value)){var e=mapRange([0,400],[48,78],FRAME.value);c.meanAge.value=e,c.$apply(),requestAnimationFrame(c.updateMeanAge)}},c.updateMeanAge(),$("#btn-reset-clusters").click(function(){c.resetClusters()}),$("#checkbox-hide-nodes-clusters").change(function(){NodeManagerCluster.toggleNodeVisibility($(this).is(":checked")?!0:!1)}),$("#checkbox_c_all").change(function(){var e=$(this).is(":checked");$("#checkbox_c0").prop("checked",e),$("#checkbox_c0").trigger("change"),$("#checkbox_c1").prop("checked",e),$("#checkbox_c1").trigger("change"),$("#checkbox_c2").prop("checked",e),$("#checkbox_c2").trigger("change"),$("#checkbox_c3").prop("checked",e),$("#checkbox_c3").trigger("change"),$("#checkbox_c4").prop("checked",e),$("#checkbox_c4").trigger("change"),$("#checkbox_c5").prop("checked",e),$("#checkbox_c5").trigger("change"),$("#checkbox_c6").prop("checked",e),$("#checkbox_c6").trigger("change"),$("#checkbox_c7").prop("checked",e),$("#checkbox_c7").trigger("change"),$("#checkbox_c8").prop("checked",e),$("#checkbox_c8").trigger("change"),$("#checkbox_c9").prop("checked",e),$("#checkbox_c9").trigger("change"),$("#checkbox_c10").prop("checked",e),$("#checkbox_c10").trigger("change"),$("#checkbox_c11").prop("checked",e),$("#checkbox_c11").trigger("change"),$("#checkbox_c12").prop("checked",e),$("#checkbox_c12").trigger("change"),$("#checkbox_c13").prop("checked",e),$("#checkbox_c13").trigger("change"),$("#checkbox_c14").prop("checked",e),$("#checkbox_c14").trigger("change"),$("#checkbox_c15").prop("checked",e),$("#checkbox_c15").trigger("change"),$("#checkbox_c16").prop("checked",e),$("#checkbox_c16").trigger("change"),$("#checkbox_c17").prop("checked",e),$("#checkbox_c17").trigger("change")}),$("#checkbox_c0").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(0,!0):EdgeManager.toggleShowByCluster(0,!1)}),$("#checkbox_c1").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(1,!0):EdgeManager.toggleShowByCluster(1,!1)}),$("#checkbox_c2").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(2,!0):EdgeManager.toggleShowByCluster(2,!1)}),$("#checkbox_c3").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(3,!0):EdgeManager.toggleShowByCluster(3,!1)}),$("#checkbox_c4").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(4,!0):EdgeManager.toggleShowByCluster(4,!1)}),$("#checkbox_c5").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(5,!0):EdgeManager.toggleShowByCluster(5,!1)}),$("#checkbox_c6").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(6,!0):EdgeManager.toggleShowByCluster(6,!1)}),$("#checkbox_c7").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(7,!0):EdgeManager.toggleShowByCluster(7,!1)}),$("#checkbox_c8").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(8,!0):EdgeManager.toggleShowByCluster(8,!1)}),$("#checkbox_c9").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(9,!0):EdgeManager.toggleShowByCluster(9,!1)}),$("#checkbox_c10").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(10,!0):EdgeManager.toggleShowByCluster(10,!1)}),$("#checkbox_c11").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(11,!0):EdgeManager.toggleShowByCluster(11,!1)}),$("#checkbox_c12").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(12,!0):EdgeManager.toggleShowByCluster(12,!1)}),$("#checkbox_c13").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(13,!0):EdgeManager.toggleShowByCluster(13,!1)}),$("#checkbox_c14").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(14,!0):EdgeManager.toggleShowByCluster(14,!1)}),$("#checkbox_c15").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(15,!0):EdgeManager.toggleShowByCluster(15,!1)}),$("#checkbox_c16").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(16,!0):EdgeManager.toggleShowByCluster(16,!1)}),$("#checkbox_c17").change(function(){console.log("checkbox!"),$(this).is(":checked")?EdgeManager.toggleShowByCluster(17,!0):EdgeManager.toggleShowByCluster(17,!1)})}]),angular.module("app").controller("IntroCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(){PAGE_NUM.value=0}function r(){$(".data-visibility").removeClass("active")}t(),r();var a=$(".slide"),g=$(".slide-group"),n=$(".bullet"),h=a.length-1,l=0,s=!1;n.first().addClass("current");var i=function(){var e=$(".slide-node").clone();$(".slide-node").html("Loading! If you see this message for a while, please refresh the page"),$(".slide-node").replaceWith(e);var c=$(".slide-lines").clone();$(".slide-lines").html("Loading! If you see this message for a while, please refresh the page"),$(".slide-lines").replaceWith(c)},d=function(){window.clearInterval(p),s=!1;var e=n.index($(this));u(e),i()},u=function(e){s?l===h?l=0:l++:l=e,n.removeClass("current"),n.eq(l).addClass("current"),k(l)},k=function(e){g.animate({top:"-"+e+"00%"}),i()};n.on("click",d);var p=window.setInterval(u,8e4)}]),angular.module("app").controller("MergePathCtrl",["$rootScope","$scope","$window",function(e,c,o){function t(){PAGE_NUM.value=2}function r(){$(".data-visibility").addClass("active")}t(),r(),c.updateMeanAge=function(){if(!(FRAME.value>400||1!=PAGE_NUM.value)){var e=mapRange([0,400],[48,78],FRAME.value);c.meanAge.value=e,c.$apply(),requestAnimationFrame(c.updateMeanAge)}},c.updateMeanAge(),$("#btn-reset-mergepaths").click(function(){c.resetMergePaths()}),$("#btn-run-mergepaths").click(function(){for(var e=document.getElementById("textinfo-mergepathids").value,o=e.split(" "),t=0;t<o.length;t++)try{var r=parseInt(o[t]);isNaN(r)?delete o[t]:o[t]=r}catch(a){return void console.log(a)}console.log("Show mergepathids : ",o),SELECTED_MERGEPATHIDS=o,c.mergePathIds.value=o,c.$apply(),c.resetMergePaths()}),$("#checkbox-hide-nodes-mergepaths").change(function(){if($(this).is(":checked"))for(var e=0;e<NodeManagerMergePaths.length;e++)for(var c=0;c<SELECTED_MERGEPATHIDS.length;c++)SELECTED_MERGEPATHIDS[c]===e&&NodeManagerMergePaths[e].toggleNodeVisibility(!0);else for(var e=0;e<NodeManagerMergePaths.length;e++)for(var c=0;c<SELECTED_MERGEPATHIDS.length;c++)SELECTED_MERGEPATHIDS[c]===e&&NodeManagerMergePaths[e].toggleNodeVisibility(!1)}),$("#checkbox-hide-names-mergepaths").change(function(){if($(this).is(":checked"))for(var e=0;e<NodeManagerMergePaths.length;e++)for(var c=0;c<SELECTED_MERGEPATHIDS.length;c++)SELECTED_MERGEPATHIDS[c]===e&&NodeManagerMergePaths[e].toggleNodeTextVisibility(!0);else for(var e=0;e<NodeManagerMergePaths.length;e++)for(var c=0;c<SELECTED_MERGEPATHIDS.length;c++)SELECTED_MERGEPATHIDS[c]===e&&NodeManagerMergePaths[e].toggleNodeTextVisibility(!1)})}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJudW1iZXIuY3RybC5qcyIsInJvdXRlcy5qcyIsIkNvbnRyb2xsZXJzL2NsdXN0ZXIuY3RybC5qcyIsIkNvbnRyb2xsZXJzL2ludHJvLmN0cmwuanMiLCJDb250cm9sbGVycy9tZXJnZXBhdGguY3RybC5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRyb290U2NvcGUiLCIkc2NvcGUiLCIkd2luZG93Iiwic2V0RGF0YUd1aUluaXRpYWxpemUiLCJyZW5kZXJPcHRpb25zVUkiLCJ0aGlzIiwiQWRkaXRpdmVDb2xvciIsIlJlc3RhcnQiLCJjb25zb2xlIiwibG9nIiwicmVuZGVyT3B0aW9ucyIsImd1aSIsImRhdCIsIkdVSSIsImd1aV9hZGRpdGl2ZUNvbG9yIiwiYWRkIiwib25GaW5pc2hDaGFuZ2UiLCJ2YWwiLCJSZW5kZXJQYXJhbXMiLCJtZWFuQWdlIiwidmFsdWUiLCJtZXJnZVBhdGhJZHMiLCJyZXNldENsdXN0ZXJzIiwiRlJBTUUiLCJQQUdFX05VTSIsIlRXRUVOIiwicmVtb3ZlQWxsIiwiRWRnZU1hbmFnZXJDbHVzdGVyIiwicmVzZXQiLCJOb2RlTWFuYWdlckNsdXN0ZXIiLCJyZXNldE1lcmdlUGF0aHMiLCJpIiwiTm9kZU1hbmFnZXJNZXJnZVBhdGhzIiwibGVuZ3RoIiwiaiIsIlNFTEVDVEVEX01FUkdFUEFUSElEUyIsIkVkZ2VNYW5hZ2VyTWVyZ2VQYXRocyIsInN0YXJ0TG9vcCIsIiRpdCIsImluaXRfaW5jcmVhc2UiLCJudW0iLCJjdXIiLCJ0aW1lX2R1cmF0aW9uIiwidGltZV9kZWxheSIsImZvcm1hdF9pbmZvIiwic2V0VmFsdWUiLCJodG1sIiwiZ2V0SHRtIiwibnVtbGVuIiwiZ2V0Rm9ybWF0ZWQiLCJuIiwibGVudG90YWwiLCJ0IiwieSIsInoiLCJzdWJzdHIiLCJyZXBsYWNlIiwibG9vcCIsInBlcmNlbnQiLCJzdGVwcyIsInBhcnNlSW50Iiwic2V0VGltZW91dCIsInN0ZXB0aW1lb3V0IiwidGFyZ2V0Rm9ybWF0ZWQiLCJjaGFycyIsInNwbGl0IiwiaHRtcyIsInRpbWV0b3RhbCIsImF0dHIiLCIkIiwiZWFjaCIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwib3RoZXJ3aXNlIiwicmVkaXJlY3RUbyIsInNldFBhZ2VOdW0iLCJzZXRWaXNpYmlsaXR5IiwiYWRkQ2xhc3MiLCJ1cGRhdGVNZWFuQWdlIiwibmV3TWVhbkFnZSIsIm1hcFJhbmdlIiwiJGFwcGx5IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2xpY2siLCJjaGFuZ2UiLCJ0b2dnbGVOb2RlVmlzaWJpbGl0eSIsImlzIiwidG9nZ2xlVmFsIiwicHJvcCIsInRyaWdnZXIiLCJFZGdlTWFuYWdlciIsInRvZ2dsZVNob3dCeUNsdXN0ZXIiLCJyZW1vdmVDbGFzcyIsIiRzbGlkZSIsIiRzbGlkZUdyb3VwIiwiJGJ1bGxldCIsInNsaWRlc1RvdGFsIiwiY3VycmVudCIsImlzQXV0b1NsaWRpbmciLCJmaXJzdCIsInJlc2V0U2xpZGVzIiwiZGl2Q2xvbmVfbm9kZSIsImNsb25lIiwicmVwbGFjZVdpdGgiLCJkaXZDbG9uZV9saW5lcyIsImNsaWNrU2xpZGUiLCJ3aW5kb3ciLCJjbGVhckludGVydmFsIiwiYXV0b1NsaWRlIiwic2xpZGVJbmRleCIsImluZGV4IiwidXBkYXRlSW5kZXgiLCJjdXJyZW50U2xpZGUiLCJlcSIsInRyYW5zaXRpb24iLCJzbGlkZVBvc2l0aW9uIiwiYW5pbWF0ZSIsInRvcCIsIm9uIiwic2V0SW50ZXJ2YWwiLCJpbnB1dCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhcnJheSIsIm1lcmdlUGF0aElkIiwiaXNOYU4iLCJlcnIiLCJ0b2dnbGVOb2RlVGV4dFZpc2liaWxpdHkiXSwibWFwcGluZ3MiOiJBQUNBQSxRQUFBQyxPQUFBLE9BQ0EsWUNEQUQsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLG1CQUFBLGFBQUEsU0FBQSxVQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBd0NBLFFBQUFDLEtBRUEsR0FBQUMsR0FBQSxXQUVBQyxLQUFBQyxlQUFBLEVBRUFELEtBQUFFLFFBQUEsV0FHQUMsUUFBQUMsSUFBQSwwQkFNQUMsRUFBQSxHQUFBTixHQUNBTyxFQUFBLEdBQUFDLEtBQUFDLElBRUFDLEVBQUFILEVBQUFJLElBQUFMLEVBQUEsZ0JBQ0FJLEdBQUFFLGVBQUEsU0FBQUMsR0FFQUMsYUFBQVosY0FEQVcsS0FBQSxHQUNBLEdBRUEsSUFTQU4sRUFBQUksSUFBQUwsRUFBQSxXQXZFQVQsRUFBQWtCLFNBQUFDLE1BQUEsR0FDQW5CLEVBQUFvQixjQUFBRCxPQUFBLElBR0FuQixFQUFBcUIsY0FBQSxXQUNBQyxNQUFBSCxNQUFBLEVBQ0FJLFNBQUFKLE1BQUEsRUFFQW5CLEVBQUFrQixRQUFBLEdBRUFNLE1BQUFDLFlBRUFDLG1CQUFBQyxRQUNBQyxtQkFBQUQsU0FJQTNCLEVBQUE2QixnQkFBQSxXQUNBUCxNQUFBSCxNQUFBLEVBQ0FJLFNBQUFKLE1BQUEsRUFFQUssTUFBQUMsV0FHQSxLQUFBLEdBQUFLLEdBQUEsRUFBQUEsRUFBQUMsc0JBQUFDLE9BQUFGLElBRUEsSUFBQSxHQUFBRyxHQUFBLEVBQUFBLEVBQUFDLHNCQUFBRixPQUFBQyxJQUVBQyxzQkFBQUQsSUFBQUgsSUFDQUMsc0JBQUFELEdBQUFILFFBQ0FRLHNCQUFBTCxHQUFBSCxVQTRDQXpCLE9DNUVBTixRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsY0FBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUtBLFFBQUFtQyxHQUFBQyxHQVNBLFFBQUFDLEdBQUFELEVBQUFFLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBV0EsUUFBQUMsR0FBQTVCLEdBRUFxQixFQUFBUSxLQUFBQyxFQUFBOUIsRUFBQStCLElBR0EsUUFBQUMsR0FBQUMsRUFBQUMsR0FFQSxHQUFBQyxHQUFBLElBQ0FyQixFQUFBbUIsRUFBQSxFQUVBLElBQUFuQixFQUFBRSxPQUFBa0IsRUFHQSxJQUFBLEdBREFFLEdBQUFGLEVBQUFwQixFQUFBRSxPQUNBcUIsRUFBQSxFQUFBRCxFQUFBQyxFQUFBQSxJQUVBdkIsRUFBQSxJQUFBQSxDQUlBLElBQUEsR0FBQWEsRUFBQSxDQUNBLEdBQUFWLElBQUFBLEVBQUFILEVBQUFFLFFBQUEsRUFBQUMsRUFBQSxFQUFBLENBQ0EsUUFBQUEsRUFBQUgsRUFBQXdCLE9BQUEsRUFBQXJCLEdBQUFrQixFQUFBLElBQUFyQixFQUFBd0IsT0FBQXJCLEdBQUFzQixRQUFBLGlCQUFBLEtBQUFKLEdBRUEsR0FBQSxHQUFBUixFQUFBLENBQ0EsR0FBQVYsSUFBQUEsRUFBQUgsRUFBQUUsUUFBQSxFQUFBQyxFQUFBLEVBQUEsQ0FDQSxRQUFBQSxFQUFBSCxFQUFBd0IsT0FBQSxFQUFBckIsR0FBQWtCLEVBQUEsSUFBQXJCLEVBQUF3QixPQUFBckIsR0FBQXNCLFFBQUEsaUJBQUEsS0FBQUosR0FHQSxHQUFBbEIsSUFBQUEsRUFBQUgsRUFBQUUsUUFBQSxFQUFBQyxFQUFBLEVBQUEsQ0FDQSxRQUFBQSxFQUFBSCxFQUFBd0IsT0FBQSxFQUFBckIsR0FBQWtCLEVBQUEsSUFBQXJCLEVBQUF3QixPQUFBckIsR0FBQXNCLFFBQUEsaUJBQUEsS0FBQUosR0FLQSxRQUFBSyxLQUVBaEIsR0FDQSxJQUFBaUIsR0FBQWpCLEVBQUFrQixDQUNBRCxJQUFBLEVBRUFiLEVBQUFlLFNBQUFwQixLQUlBSyxFQUFBZSxTQUFBRixFQUFBbEIsSUFDQXFCLFdBQUFKLEVBQUFLLElBSUEsUUFBQWYsR0FBQVAsRUFBQVcsR0FJQSxJQUFBLEdBSEFZLEdBQUFkLEVBQUFULEVBQUFXLEdBQ0FhLEVBQUFELEVBQUFFLE1BQUEsSUFDQUMsS0FDQW5DLEVBQUEsRUFBQUEsRUFBQWlDLEVBQUEvQixPQUFBRixJQUlBbUMsR0FGQSxLQUFBRixFQUFBakMsR0FFQSxpQkFJQSxTQUFBaUMsRUFBQWpDLEdBQUEsU0FHQSxPQUFBbUMsR0F6RUEsR0FBQVAsR0FBQSxJQUNBUSxFQUFBekIsRUFDQUQsRUFBQSxFQUNBcUIsRUFBQUssRUFBQVIsRUFDQVgsR0FBQVIsRUFBQSxJQUFBUCxNQUVBSyxHQUFBUSxLQUFBQyxFQUFBLEVBQUFDLElBQ0FhLFdBQUFKLEVBQUFkLEdBakJBLEdBQUFGLEdBQUEsRUFDQUQsRUFBQW9CLFNBQUF0QixFQUFBOEIsS0FBQSxhQUNBMUIsRUFBQWtCLFNBQUF0QixFQUFBOEIsS0FBQSxrQkFDQXpCLEVBQUFpQixTQUFBdEIsRUFBQThCLEtBQUEsZUFDQXhCLEVBQUFnQixTQUFBdEIsRUFBQThCLEtBQUEsZUFFQTdCLEdBQUFELEVBQUFFLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBWEF5QixFQUFBLGNBQUFDLEtBQUEsV0FDQWpDLEVBQUFnQyxFQUFBaEUsWUNIQVIsUUFBQUMsT0FBQSxPQUNBeUUsUUFBQSxpQkFBQSxTQUFBQyxHQUNBQSxFQUNBQyxLQUFBLGVBRUFDLFlBQUEsNkJBQ0EzRSxXQUFBLGtCQUVBMEUsS0FBQSxhQUVBQyxZQUFBLDJCQUNBM0UsV0FBQSxnQkFFQTBFLEtBQUEsVUFFQUMsWUFBQSx3QkFDQTNFLFdBQUEsY0FFQTRFLFdBRUFDLFdBQUEsY0NwQkEvRSxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsZUFBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUVBLFFBQUEyRSxLQUNBckQsU0FBQUosTUFBQSxFQUtBLFFBQUEwRCxLQUNBVCxFQUFBLG9CQUFBVSxTQUFBLFVBSkFGLElBTUFDLElBR0E3RSxFQUFBK0UsY0FBQSxXQUNBLEtBQUF6RCxNQUFBSCxNQUFBLEtBQUEsR0FBQUksU0FBQUosT0FBQSxDQUdBLEdBQUE2RCxHQUFBQyxVQUFBLEVBQUEsTUFBQSxHQUFBLElBQUEzRCxNQUFBSCxNQUNBbkIsR0FBQWtCLFFBQUFDLE1BQUE2RCxFQUNBaEYsRUFBQWtGLFNBQ0FDLHNCQUFBbkYsRUFBQStFLGlCQUVBL0UsRUFBQStFLGdCQUlBWCxFQUFBLHVCQUFBZ0IsTUFBQSxXQUVBcEYsRUFBQXFCLGtCQU1BK0MsRUFBQSxpQ0FBQWlCLE9BQUEsV0FFQXpELG1CQUFBMEQscUJBREFsQixFQUFBaEUsTUFBQW1GLEdBQUEsYUFDQSxHQUlBLEtBTUFuQixFQUFBLG1CQUFBaUIsT0FBQSxXQUVBLEdBQUFHLEdBQUFwQixFQUFBaEUsTUFBQW1GLEdBQUEsV0FFQW5CLEdBQUEsZ0JBQUFxQixLQUFBLFVBQUFELEdBQ0FwQixFQUFBLGdCQUFBc0IsUUFBQSxVQUNBdEIsRUFBQSxnQkFBQXFCLEtBQUEsVUFBQUQsR0FDQXBCLEVBQUEsZ0JBQUFzQixRQUFBLFVBQ0F0QixFQUFBLGdCQUFBcUIsS0FBQSxVQUFBRCxHQUNBcEIsRUFBQSxnQkFBQXNCLFFBQUEsVUFDQXRCLEVBQUEsZ0JBQUFxQixLQUFBLFVBQUFELEdBQ0FwQixFQUFBLGdCQUFBc0IsUUFBQSxVQUNBdEIsRUFBQSxnQkFBQXFCLEtBQUEsVUFBQUQsR0FDQXBCLEVBQUEsZ0JBQUFzQixRQUFBLFVBQ0F0QixFQUFBLGdCQUFBcUIsS0FBQSxVQUFBRCxHQUNBcEIsRUFBQSxnQkFBQXNCLFFBQUEsVUFDQXRCLEVBQUEsZ0JBQUFxQixLQUFBLFVBQUFELEdBQ0FwQixFQUFBLGdCQUFBc0IsUUFBQSxVQUNBdEIsRUFBQSxnQkFBQXFCLEtBQUEsVUFBQUQsR0FDQXBCLEVBQUEsZ0JBQUFzQixRQUFBLFVBQ0F0QixFQUFBLGdCQUFBcUIsS0FBQSxVQUFBRCxHQUNBcEIsRUFBQSxnQkFBQXNCLFFBQUEsVUFDQXRCLEVBQUEsZ0JBQUFxQixLQUFBLFVBQUFELEdBQ0FwQixFQUFBLGdCQUFBc0IsUUFBQSxVQUNBdEIsRUFBQSxpQkFBQXFCLEtBQUEsVUFBQUQsR0FDQXBCLEVBQUEsaUJBQUFzQixRQUFBLFVBQ0F0QixFQUFBLGlCQUFBcUIsS0FBQSxVQUFBRCxHQUNBcEIsRUFBQSxpQkFBQXNCLFFBQUEsVUFDQXRCLEVBQUEsaUJBQUFxQixLQUFBLFVBQUFELEdBQ0FwQixFQUFBLGlCQUFBc0IsUUFBQSxVQUNBdEIsRUFBQSxpQkFBQXFCLEtBQUEsVUFBQUQsR0FDQXBCLEVBQUEsaUJBQUFzQixRQUFBLFVBQ0F0QixFQUFBLGlCQUFBcUIsS0FBQSxVQUFBRCxHQUNBcEIsRUFBQSxpQkFBQXNCLFFBQUEsVUFDQXRCLEVBQUEsaUJBQUFxQixLQUFBLFVBQUFELEdBQ0FwQixFQUFBLGlCQUFBc0IsUUFBQSxVQUNBdEIsRUFBQSxpQkFBQXFCLEtBQUEsVUFBQUQsR0FDQXBCLEVBQUEsaUJBQUFzQixRQUFBLFVBQ0F0QixFQUFBLGlCQUFBcUIsS0FBQSxVQUFBRCxHQUNBcEIsRUFBQSxpQkFBQXNCLFFBQUEsWUFLQXRCLEVBQUEsZ0JBQUFpQixPQUFBLFdBQ0E5RSxRQUFBQyxJQUFBLGFBQ0E0RCxFQUFBaEUsTUFBQW1GLEdBQUEsWUFDQUksWUFBQUMsb0JBQUEsR0FBQSxHQUtBRCxZQUFBQyxvQkFBQSxHQUFBLEtBTUF4QixFQUFBLGdCQUFBaUIsT0FBQSxXQUNBOUUsUUFBQUMsSUFBQSxhQUNBNEQsRUFBQWhFLE1BQUFtRixHQUFBLFlBQ0FJLFlBQUFDLG9CQUFBLEdBQUEsR0FLQUQsWUFBQUMsb0JBQUEsR0FBQSxLQUtBeEIsRUFBQSxnQkFBQWlCLE9BQUEsV0FDQTlFLFFBQUFDLElBQUEsYUFDQTRELEVBQUFoRSxNQUFBbUYsR0FBQSxZQUNBSSxZQUFBQyxvQkFBQSxHQUFBLEdBS0FELFlBQUFDLG9CQUFBLEdBQUEsS0FLQXhCLEVBQUEsZ0JBQUFpQixPQUFBLFdBQ0E5RSxRQUFBQyxJQUFBLGFBQ0E0RCxFQUFBaEUsTUFBQW1GLEdBQUEsWUFDQUksWUFBQUMsb0JBQUEsR0FBQSxHQUtBRCxZQUFBQyxvQkFBQSxHQUFBLEtBS0F4QixFQUFBLGdCQUFBaUIsT0FBQSxXQUNBOUUsUUFBQUMsSUFBQSxhQUNBNEQsRUFBQWhFLE1BQUFtRixHQUFBLFlBQ0FJLFlBQUFDLG9CQUFBLEdBQUEsR0FLQUQsWUFBQUMsb0JBQUEsR0FBQSxLQU1BeEIsRUFBQSxnQkFBQWlCLE9BQUEsV0FDQTlFLFFBQUFDLElBQUEsYUFDQTRELEVBQUFoRSxNQUFBbUYsR0FBQSxZQUNBSSxZQUFBQyxvQkFBQSxHQUFBLEdBS0FELFlBQUFDLG9CQUFBLEdBQUEsS0FNQXhCLEVBQUEsZ0JBQUFpQixPQUFBLFdBQ0E5RSxRQUFBQyxJQUFBLGFBQ0E0RCxFQUFBaEUsTUFBQW1GLEdBQUEsWUFDQUksWUFBQUMsb0JBQUEsR0FBQSxHQUtBRCxZQUFBQyxvQkFBQSxHQUFBLEtBTUF4QixFQUFBLGdCQUFBaUIsT0FBQSxXQUNBOUUsUUFBQUMsSUFBQSxhQUNBNEQsRUFBQWhFLE1BQUFtRixHQUFBLFlBQ0FJLFlBQUFDLG9CQUFBLEdBQUEsR0FLQUQsWUFBQUMsb0JBQUEsR0FBQSxLQU1BeEIsRUFBQSxnQkFBQWlCLE9BQUEsV0FDQTlFLFFBQUFDLElBQUEsYUFDQTRELEVBQUFoRSxNQUFBbUYsR0FBQSxZQUNBSSxZQUFBQyxvQkFBQSxHQUFBLEdBS0FELFlBQUFDLG9CQUFBLEdBQUEsS0FNQXhCLEVBQUEsZ0JBQUFpQixPQUFBLFdBQ0E5RSxRQUFBQyxJQUFBLGFBQ0E0RCxFQUFBaEUsTUFBQW1GLEdBQUEsWUFDQUksWUFBQUMsb0JBQUEsR0FBQSxHQUtBRCxZQUFBQyxvQkFBQSxHQUFBLEtBTUF4QixFQUFBLGlCQUFBaUIsT0FBQSxXQUNBOUUsUUFBQUMsSUFBQSxhQUNBNEQsRUFBQWhFLE1BQUFtRixHQUFBLFlBQ0FJLFlBQUFDLG9CQUFBLElBQUEsR0FLQUQsWUFBQUMsb0JBQUEsSUFBQSxLQU1BeEIsRUFBQSxpQkFBQWlCLE9BQUEsV0FDQTlFLFFBQUFDLElBQUEsYUFDQTRELEVBQUFoRSxNQUFBbUYsR0FBQSxZQUNBSSxZQUFBQyxvQkFBQSxJQUFBLEdBS0FELFlBQUFDLG9CQUFBLElBQUEsS0FNQXhCLEVBQUEsaUJBQUFpQixPQUFBLFdBQ0E5RSxRQUFBQyxJQUFBLGFBQ0E0RCxFQUFBaEUsTUFBQW1GLEdBQUEsWUFDQUksWUFBQUMsb0JBQUEsSUFBQSxHQUtBRCxZQUFBQyxvQkFBQSxJQUFBLEtBTUF4QixFQUFBLGlCQUFBaUIsT0FBQSxXQUNBOUUsUUFBQUMsSUFBQSxhQUNBNEQsRUFBQWhFLE1BQUFtRixHQUFBLFlBQ0FJLFlBQUFDLG9CQUFBLElBQUEsR0FLQUQsWUFBQUMsb0JBQUEsSUFBQSxLQU1BeEIsRUFBQSxpQkFBQWlCLE9BQUEsV0FDQTlFLFFBQUFDLElBQUEsYUFDQTRELEVBQUFoRSxNQUFBbUYsR0FBQSxZQUNBSSxZQUFBQyxvQkFBQSxJQUFBLEdBS0FELFlBQUFDLG9CQUFBLElBQUEsS0FLQXhCLEVBQUEsaUJBQUFpQixPQUFBLFdBQ0E5RSxRQUFBQyxJQUFBLGFBQ0E0RCxFQUFBaEUsTUFBQW1GLEdBQUEsWUFDQUksWUFBQUMsb0JBQUEsSUFBQSxHQUtBRCxZQUFBQyxvQkFBQSxJQUFBLEtBS0F4QixFQUFBLGlCQUFBaUIsT0FBQSxXQUNBOUUsUUFBQUMsSUFBQSxhQUNBNEQsRUFBQWhFLE1BQUFtRixHQUFBLFlBQ0FJLFlBQUFDLG9CQUFBLElBQUEsR0FLQUQsWUFBQUMsb0JBQUEsSUFBQSxLQU1BeEIsRUFBQSxpQkFBQWlCLE9BQUEsV0FDQTlFLFFBQUFDLElBQUEsYUFDQTRELEVBQUFoRSxNQUFBbUYsR0FBQSxZQUNBSSxZQUFBQyxvQkFBQSxJQUFBLEdBS0FELFlBQUFDLG9CQUFBLElBQUEsUUM3VUFoRyxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxhQUFBLFNBQUEsVUFBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUVBLFFBQUEyRSxLQUNBckQsU0FBQUosTUFBQSxFQUtBLFFBQUEwRCxLQUNBVCxFQUFBLG9CQUFBeUIsWUFBQSxVQUpBakIsSUFNQUMsR0FFQSxJQUFBaUIsR0FBQTFCLEVBQUEsVUFDQTJCLEVBQUEzQixFQUFBLGdCQUNBNEIsRUFBQTVCLEVBQUEsV0FFQTZCLEVBQUFILEVBQUE5RCxPQUFBLEVBQ0FrRSxFQUFBLEVBQ0FDLEdBQUEsQ0FFQUgsR0FBQUksUUFBQXRCLFNBQUEsVUFHQSxJQUFBdUIsR0FBQSxXQUVBLEdBQUFDLEdBQUFsQyxFQUFBLGVBQUFtQyxPQUNBbkMsR0FBQSxlQUFBdkIsS0FBQSx5RUFHQXVCLEVBQUEsZUFBQW9DLFlBQUFGLEVBR0EsSUFBQUcsR0FBQXJDLEVBQUEsZ0JBQUFtQyxPQUVBbkMsR0FBQSxnQkFBQXZCLEtBQUEseUVBR0F1QixFQUFBLGdCQUFBb0MsWUFBQUMsSUFHQUMsRUFBQSxXQUVBQyxPQUFBQyxjQUFBQyxHQUNBVixHQUFBLENBRUEsSUFBQVcsR0FBQWQsRUFBQWUsTUFBQTNDLEVBQUFoRSxNQUVBNEcsR0FBQUYsR0FFQVQsS0FHQVcsRUFBQSxTQUFBQyxHQUNBZCxFQUNBRCxJQUFBRCxFQUNBQyxFQUFBLEVBRUFBLElBR0FBLEVBQUFlLEVBR0FqQixFQUFBSCxZQUFBLFdBQ0FHLEVBQUFrQixHQUFBaEIsR0FBQXBCLFNBQUEsV0FFQXFDLEVBQUFqQixJQUdBaUIsRUFBQSxTQUFBQyxHQUNBckIsRUFBQXNCLFNBQ0FDLElBQUEsSUFBQUYsRUFBQSxRQUdBZixJQUdBTCxHQUFBdUIsR0FBQSxRQUFBYixFQUVBLElBQUFHLEdBQUFGLE9BQUFhLFlBQUFSLEVBQUEsUUNqRkFwSCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsaUJBQUEsYUFBQSxTQUFBLFVBQUEsU0FBQUMsRUFBQUMsRUFBQUMsR0FFQSxRQUFBMkUsS0FFQXJELFNBQUFKLE1BQUEsRUFLQSxRQUFBMEQsS0FFQVQsRUFBQSxvQkFBQVUsU0FBQSxVQUpBRixJQU9BQyxJQUVBN0UsRUFBQStFLGNBQUEsV0FDQSxLQUFBekQsTUFBQUgsTUFBQSxLQUFBLEdBQUFJLFNBQUFKLE9BQUEsQ0FHQSxHQUFBNkQsR0FBQUMsVUFBQSxFQUFBLE1BQUEsR0FBQSxJQUFBM0QsTUFBQUgsTUFDQW5CLEdBQUFrQixRQUFBQyxNQUFBNkQsRUFDQWhGLEVBQUFrRixTQUNBQyxzQkFBQW5GLEVBQUErRSxpQkFFQS9FLEVBQUErRSxnQkFHQVgsRUFBQSx5QkFBQWdCLE1BQUEsV0FFQXBGLEVBQUE2QixvQkFJQXVDLEVBQUEsdUJBQUFnQixNQUFBLFdBS0EsSUFBQSxHQUhBcUMsR0FBQUMsU0FBQUMsZUFBQSx5QkFBQXhHLE1BQ0F5RyxFQUFBSCxFQUFBekQsTUFBQSxLQUVBbEMsRUFBQSxFQUFBQSxFQUFBOEYsRUFBQTVGLE9BQUFGLElBRUEsSUFDQSxHQUFBK0YsR0FBQWxFLFNBQUFpRSxFQUFBOUYsR0FDQWdHLE9BQUFELFNBQ0FELEdBQUE5RixHQUVBOEYsRUFBQTlGLEdBQUErRixFQUdBLE1BQUFFLEdBRUEsV0FEQXhILFNBQUFDLElBQUF1SCxHQUlBeEgsUUFBQUMsSUFBQSx1QkFBQW9ILEdBQ0ExRixzQkFBQTBGLEVBQ0E1SCxFQUFBb0IsYUFBQUQsTUFBQXlHLEVBQ0E1SCxFQUFBa0YsU0FDQWxGLEVBQUE2QixvQkFJQXVDLEVBQUEsbUNBQUFpQixPQUFBLFdBQ0EsR0FBQWpCLEVBQUFoRSxNQUFBbUYsR0FBQSxZQUVBLElBQUEsR0FBQXpELEdBQUEsRUFBQUEsRUFBQUMsc0JBQUFDLE9BQUFGLElBRUEsSUFBQSxHQUFBRyxHQUFBLEVBQUFBLEVBQUFDLHNCQUFBRixPQUFBQyxJQUVBQyxzQkFBQUQsS0FBQUgsR0FDQUMsc0JBQUFELEdBQUF3RCxzQkFBQSxPQVdBLEtBQUEsR0FBQXhELEdBQUEsRUFBQUEsRUFBQUMsc0JBQUFDLE9BQUFGLElBRUEsSUFBQSxHQUFBRyxHQUFBLEVBQUFBLEVBQUFDLHNCQUFBRixPQUFBQyxJQUVBQyxzQkFBQUQsS0FBQUgsR0FDQUMsc0JBQUFELEdBQUF3RCxzQkFBQSxLQVVBbEIsRUFBQSxtQ0FBQWlCLE9BQUEsV0FDQSxHQUFBakIsRUFBQWhFLE1BQUFtRixHQUFBLFlBRUEsSUFBQSxHQUFBekQsR0FBQSxFQUFBQSxFQUFBQyxzQkFBQUMsT0FBQUYsSUFFQSxJQUFBLEdBQUFHLEdBQUEsRUFBQUEsRUFBQUMsc0JBQUFGLE9BQUFDLElBRUFDLHNCQUFBRCxLQUFBSCxHQUNBQyxzQkFBQUQsR0FBQWtHLDBCQUFBLE9BVUEsS0FBQSxHQUFBbEcsR0FBQSxFQUFBQSxFQUFBQyxzQkFBQUMsT0FBQUYsSUFFQSxJQUFBLEdBQUFHLEdBQUEsRUFBQUEsRUFBQUMsc0JBQUFGLE9BQUFDLElBRUFDLHNCQUFBRCxLQUFBSCxHQUNBQyxzQkFBQUQsR0FBQWtHLDBCQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFtcblx0J25nUm91dGUnLFxuXSk7XG4iLCJcbmFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0FwcGxpY2F0aW9uQ3RybCcsIGZ1bmN0aW9uKCRyb290U2NvcGUsICRzY29wZSwgJHdpbmRvdyl7XG5cdCRzY29wZS5tZWFuQWdlID0geyB2YWx1ZSA6IDAgfTtcblx0JHNjb3BlLm1lcmdlUGF0aElkcyA9IHsgdmFsdWUgOiBbMF19O1xuXG5cblx0JHNjb3BlLnJlc2V0Q2x1c3RlcnMgPSBmdW5jdGlvbigpe1xuICAgICAgXHRGUkFNRS52YWx1ZSAgICA9IDA7XG4gICAgICBcdFBBR0VfTlVNLnZhbHVlID0gMTtcblxuICAgICAgXHQkc2NvcGUubWVhbkFnZSA9IDQ4LjA7XG5cbiAgICAgIFx0VFdFRU4ucmVtb3ZlQWxsKCk7IC8vIHJlc2V0IHR3ZWVuIGFuaW1hdGlvbnNcblxuICAgICAgXHRFZGdlTWFuYWdlckNsdXN0ZXIucmVzZXQoKTtcbiAgICAgIFx0Tm9kZU1hbmFnZXJDbHVzdGVyLnJlc2V0KCk7XG5cdH1cblxuXG5cdCRzY29wZS5yZXNldE1lcmdlUGF0aHMgPSBmdW5jdGlvbigpe1xuXHRcdEZSQU1FLnZhbHVlICAgID0gMDtcblx0XHRQQUdFX05VTS52YWx1ZSA9IDI7XG5cblx0XHRUV0VFTi5yZW1vdmVBbGwoKTsgLy8gcmVzZXQgdHdlZW4gYW5pbWF0aW9uc1xuXG5cdFx0Ly8gdHVybiBvZmYgbm9kZXMgYW5kIGVkZ2VzIGV4Y2VwdCBtZXJnZVBhdGhJZFxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgTm9kZU1hbmFnZXJNZXJnZVBhdGhzLmxlbmd0aDsgaSsrKXtcblxuXHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBTRUxFQ1RFRF9NRVJHRVBBVEhJRFMubGVuZ3RoOyBqKyspe1xuXG5cdFx0XHRcdGlmIChTRUxFQ1RFRF9NRVJHRVBBVEhJRFNbal0gPT0gaSl7XG5cdFx0XHRcdFx0Tm9kZU1hbmFnZXJNZXJnZVBhdGhzW2ldLnJlc2V0KCk7XG5cdFx0XHRcdFx0RWRnZU1hbmFnZXJNZXJnZVBhdGhzW2ldLnJlc2V0KCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0fVxuXG5cdFx0fVxuXHR9XG5cblxuXHRmdW5jdGlvbiBzZXREYXRhR3VpSW5pdGlhbGl6ZSgpe1xuXG5cdCAgICB2YXIgcmVuZGVyT3B0aW9uc1VJID0gZnVuY3Rpb24oKSB7XG5cblx0ICAgICAgdGhpcy5BZGRpdGl2ZUNvbG9yID0gdHJ1ZTtcblxuXHQgICAgICB0aGlzLlJlc3RhcnQgPSBmdW5jdGlvbigpIHsgXG5cblx0ICAgICAgXHQgLy8gcmVzdGFydCB0aGUgcGFnZVxuXHQgICAgICBcdCBjb25zb2xlLmxvZyhcInJlc3RhcnQgdGhlIHdlYiBwYWdlXCIpO1xuXG5cdCAgICAgIH07XG5cblx0ICAgIH07XG5cblx0ICAgIHZhciByZW5kZXJPcHRpb25zIFx0PSBuZXcgcmVuZGVyT3B0aW9uc1VJKCk7XG5cdCAgICB2YXIgZ3VpICBcdFx0XHQ9IG5ldyBkYXQuR1VJKCk7XG5cblx0ICAgIHZhciBndWlfYWRkaXRpdmVDb2xvciA9IGd1aS5hZGQocmVuZGVyT3B0aW9ucywgJ0FkZGl0aXZlQ29sb3InKTtcblx0ICAgIGd1aV9hZGRpdGl2ZUNvbG9yLm9uRmluaXNoQ2hhbmdlKGZ1bmN0aW9uKHZhbCkge1xuXHQgICAgXHRpZiAodmFsID09PSB0cnVlKVxuXHQgICAgXHRcdFJlbmRlclBhcmFtcy5BZGRpdGl2ZUNvbG9yID0gdHJ1ZTtcblx0ICAgIFx0ZWxzZVxuXHQgICAgXHRcdFJlbmRlclBhcmFtcy5BZGRpdGl2ZUNvbG9yID0gZmFsc2U7XG5cdCAgICBcdC8qXG5cdCAgICAgIFx0aWYgKFBBR0VfTlVNLnZhbHVlID09PSAxKVxuXHQgICAgICAgIFx0JHNjb3BlLnJlc2V0Q2x1c3RlcnMoKTsgXG5cdCAgICAgICAgZWxzZSBpZiAoUEFHRV9OVU0udmFsdWUgPT09IDIpXG5cdCAgICAgICAgXHQkc2NvcGUucmVzZXRNZXJnZVBhdGhzKCk7XG5cdCAgICAgICAgKi9cblx0ICAgIH0pO1xuXG5cdCAgICBndWkuYWRkKHJlbmRlck9wdGlvbnMsICdSZXN0YXJ0Jyk7XG5cblx0fVxuICBcdHNldERhdGFHdWlJbml0aWFsaXplKCk7XG59KTsiLCJcbmFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ051bWJlckN0cmwnLCBmdW5jdGlvbigkcm9vdFNjb3BlLCAkc2NvcGUsICR3aW5kb3cpe1xuICAgICQoJ1tkYXRhLW51bV0nKS5lYWNoKGZ1bmN0aW9uKCl7XG4gICAgXHRzdGFydExvb3AoJCh0aGlzKSk7XG4gIFx0fSk7XG4gXG4gIFx0ZnVuY3Rpb24gc3RhcnRMb29wKCRpdCl7XG5cdCAgICB2YXIgY3VyICAgICAgICAgICA9IDA7XG5cdCAgICB2YXIgbnVtICAgICAgICAgICA9IHBhcnNlSW50KCRpdC5hdHRyKCdkYXRhLW51bScpKTtcblx0ICAgIHZhciB0aW1lX2R1cmF0aW9uID0gcGFyc2VJbnQoJGl0LmF0dHIoJ3RpbWUtZHVyYXRpb24nKSk7XG5cdCAgICB2YXIgdGltZV9kZWxheSAgICA9IHBhcnNlSW50KCRpdC5hdHRyKCd0aW1lLWRlbGF5JykpO1xuXHQgICAgdmFyIGZvcm1hdF9pbmZvICAgPSBwYXJzZUludCgkaXQuYXR0cignZm9ybWF0LWluZm8nKSk7XG5cblx0ICAgIGluaXRfaW5jcmVhc2UoJGl0LCBudW0sIGN1ciwgdGltZV9kdXJhdGlvbiwgdGltZV9kZWxheSwgZm9ybWF0X2luZm8pO1xuXG5cdCAgICBmdW5jdGlvbiBpbml0X2luY3JlYXNlKCRpdCwgbnVtLCBjdXIsIHRpbWVfZHVyYXRpb24sIHRpbWVfZGVsYXksIGZvcm1hdF9pbmZvKVxuXHQgICAge1xuXHQgICAgICAgIHZhciBzdGVwcyAgICAgICA9IDEwMDtcblx0ICAgICAgICB2YXIgdGltZXRvdGFsICAgPSB0aW1lX2R1cmF0aW9uO1xuXHQgICAgICAgIHZhciBjdXIgICAgICAgICA9IDA7XG5cdCAgICAgICAgdmFyIHN0ZXB0aW1lb3V0ID0gdGltZXRvdGFsL3N0ZXBzOyAgICAgIFxuXHQgICAgICAgIHZhciBudW1sZW4gICAgICA9IChudW0rJycpLmxlbmd0aDtcblxuXHQgICAgICAgICRpdC5odG1sKGdldEh0bSgwLG51bWxlbikpO1xuXHQgICAgICAgIHNldFRpbWVvdXQobG9vcCwgdGltZV9kZWxheSk7XG5cblx0ICAgICAgICBmdW5jdGlvbiBzZXRWYWx1ZSh2YWwpXG5cdCAgICAgICAge1xuXHQgICAgICAgIFx0JGl0Lmh0bWwoZ2V0SHRtKHZhbCxudW1sZW4pKTtcblx0ICAgICAgXHR9XG5cblx0ICAgICAgXHRmdW5jdGlvbiBnZXRGb3JtYXRlZChuLGxlbnRvdGFsKVxuXHQgICAgICBcdHtcblx0ICAgICAgICBcdHZhciB0ID0gIFwiLlwiO1xuXHQgICAgICAgIFx0dmFyIGkgPSBuICsgXCJcIjtcblx0ICAgICAgICBcdFxuXHQgICAgICAgIFx0aWYoaS5sZW5ndGg8bGVudG90YWwpXG5cdCAgICAgICAgXHR7XG5cdCAgICAgICAgICBcdFx0dmFyIHkgPSBsZW50b3RhbC1pLmxlbmd0aDtcblx0ICAgICAgICAgIFx0XHRmb3IodmFyIHo9MDt6PHk7eisrKVxuXHQgICAgICAgICAgXHRcdHtcblx0ICAgICAgICAgICAgXHRcdGkgPSAnMCcraTtcblx0ICAgICAgICAgIFx0XHR9XG5cdCAgICAgICAgXHR9ICAgICBcblx0ICAgICAgICBcdFxuXHQgICAgICAgIFx0aWYgKGZvcm1hdF9pbmZvID09IDMpe1xuXHQgICAgICAgIFx0XHR2YXIgaiA9IChqID0gaS5sZW5ndGgpID4gMyA/IGogJSAzIDogMDtcblx0ICAgICAgIFx0XHRcdHJldHVybiAoaiA/IGkuc3Vic3RyKDAsIGopICsgdCA6IFwiXCIpICsgaS5zdWJzdHIoaikucmVwbGFjZSgvKFxcZHszfSkoPz1cXGQpL2csIFwiJDFcIiArIHQpO1xuXHQgICAgICAgIFx0fVxuXHQgICAgICAgIFx0aWYgKGZvcm1hdF9pbmZvID09IDQpe1xuXHQgICAgICAgIFx0XHR2YXIgaiA9IChqID0gaS5sZW5ndGgpID4gNCA/IGogJSA0IDogMDtcblx0ICAgICAgIFx0XHRcdHJldHVybiAoaiA/IGkuc3Vic3RyKDAsIGopICsgdCA6IFwiXCIpICsgaS5zdWJzdHIoaikucmVwbGFjZSgvKFxcZHs0fSkoPz1cXGQpL2csIFwiJDFcIiArIHQpO1xuXHQgICAgICAgIFx0fVxuXHQgICAgICAgIFx0ZWxzZSB7XG5cdCAgICAgICAgXHRcdHZhciBqID0gKGogPSBpLmxlbmd0aCkgPiAyID8gaiAlIDIgOiAwO1xuXHQgICAgICAgXHRcdFx0cmV0dXJuIChqID8gaS5zdWJzdHIoMCwgaikgKyB0IDogXCJcIikgKyBpLnN1YnN0cihqKS5yZXBsYWNlKC8oXFxkezJ9KSg/PVxcZCkvZywgXCIkMVwiICsgdCk7XG5cdCAgICAgICAgXHR9XG5cdCAgICAgICAgXHRcblx0ICAgICAgXHR9XG5cblx0ICAgICAgXHRmdW5jdGlvbiBsb29wKClcblx0ICAgICAgXHR7XG5cdFx0ICAgICAgICBjdXIrK1xuXHRcdCAgICAgICAgdmFyIHBlcmNlbnQgPSBjdXIvc3RlcHM7XG5cdFx0ICAgICAgICBpZiAocGVyY2VudD49MSlcblx0XHQgICAgICAgIHsgICAgICAgICAgXG5cdFx0ICAgICAgICBcdHNldFZhbHVlKHBhcnNlSW50KG51bSkpO1xuXHRcdCAgICAgICAgfSBcblx0XHQgICAgICAgIGVsc2UgXG5cdFx0ICAgICAgICB7XG5cdFx0ICAgICAgICAgIFx0c2V0VmFsdWUocGFyc2VJbnQocGVyY2VudCpudW0pKTtcblx0XHQgICAgICAgICAgXHRzZXRUaW1lb3V0KGxvb3Asc3RlcHRpbWVvdXQpOyAgICAgICAgICBcblx0ICAgICAgICBcdH1cblx0ICAgICAgXHR9XG5cblx0ICAgICAgXHRmdW5jdGlvbiBnZXRIdG0obnVtLGxlbnRvdGFsKXsgICAgICAgIFxuXHQgICAgICAgIFx0dmFyIHRhcmdldEZvcm1hdGVkID0gZ2V0Rm9ybWF0ZWQobnVtLGxlbnRvdGFsKTtcblx0ICAgICAgICBcdHZhciBjaGFycyA9IHRhcmdldEZvcm1hdGVkLnNwbGl0KCcnKTtcblx0ICAgICAgICBcdHZhciBodG1zID0gW107XG5cdCAgICAgICAgXHRmb3IgKHZhciBpPTA7aTxjaGFycy5sZW5ndGg7aSsrKVxuXHQgICAgICAgIFx0e1xuXHQgICAgICAgICAgXHRcdGlmIChjaGFyc1tpXSA9PSAnLicpXG5cdCAgICAgICAgICBcdFx0e1xuXHQgICAgICAgICAgICBcdFx0aHRtcys9JzxzcGFuPi48L3NwYW4+Jztcblx0ICAgICAgICAgIFx0XHR9IFxuXHQgICAgICAgICAgXHRcdGVsc2UgXG5cdCAgICAgICAgICBcdFx0eyAgICAgICAgICBcblx0ICAgICAgICAgICAgXHRcdGh0bXMrPSc8c3Bhbj4nK2NoYXJzW2ldKyc8L3NwYW4+Jztcblx0ICAgICAgICAgIFx0XHR9XG5cdCAgICAgICAgXHR9XG5cdCAgICAgICAgXHRyZXR1cm4gaHRtcztcblx0ICAgICAgXHR9XG5cdCAgICB9XG5cdH1cbn0pOyIsIlxuYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29uZmlnKGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcil7XG5cdCRyb3V0ZVByb3ZpZGVyXG5cdC53aGVuKCcvbWVyZ2VwYXRocycsIFxuXHRcdHtcblx0XHRcdHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9tZXJnZXBhdGhzLmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ01lcmdlUGF0aEN0cmwnXG5cdFx0fSlcblx0LndoZW4oJy9jbHVzdGVycycsIFxuXHRcdHtcblx0XHRcdHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9jbHVzdGVycy5odG1sJyxcblx0XHRcdGNvbnRyb2xsZXI6ICdDbHVzdGVyQ3RybCdcblx0XHR9KVxuXHQud2hlbignL2ludHJvJywgXG5cdFx0e1xuXHRcdFx0dGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL2ludHJvLmh0bWwnLFxuXHRcdFx0Y29udHJvbGxlcjogJ0ludHJvQ3RybCdcblx0XHR9KVxuXHQub3RoZXJ3aXNlKFxuXHRcdHtcbiAgIFx0XHRcdHJlZGlyZWN0VG86ICcvaW50cm8nXG5cdFx0fSk7XG5cbn0pO1xuIiwiXG5hbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdDbHVzdGVyQ3RybCcsIGZ1bmN0aW9uKCRyb290U2NvcGUsICRzY29wZSwgJHdpbmRvdyl7XG5cbiAgZnVuY3Rpb24gc2V0UGFnZU51bSgpe1xuICAgIFBBR0VfTlVNLnZhbHVlID0gMTsgLy8gMSAtIGNsdXN0ZXJcbiAgfVxuICBzZXRQYWdlTnVtKCk7XG5cblxuICBmdW5jdGlvbiBzZXRWaXNpYmlsaXR5KCl7XG4gICAgJCgnLmRhdGEtdmlzaWJpbGl0eScpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgfVxuICBzZXRWaXNpYmlsaXR5KCk7XG5cblxuICAkc2NvcGUudXBkYXRlTWVhbkFnZSA9IGZ1bmN0aW9uKCl7XG4gICAgaWYgKEZSQU1FLnZhbHVlID4gNDAwIHx8IFBBR0VfTlVNLnZhbHVlICE9IDEpXG4gICAgICByZXR1cm47XG5cbiAgICB2YXIgbmV3TWVhbkFnZSA9IG1hcFJhbmdlKFswLCA0MDAuMF0sIFs0OC4wLCA3OC4wXSwgRlJBTUUudmFsdWUpO1xuICAgICRzY29wZS5tZWFuQWdlLnZhbHVlID0gbmV3TWVhbkFnZTtcbiAgICAkc2NvcGUuJGFwcGx5KCk7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCRzY29wZS51cGRhdGVNZWFuQWdlKTtcbiAgfVxuICAkc2NvcGUudXBkYXRlTWVhbkFnZSgpO1xuXG5cbiAgLy8gcmVzZXQgYW5pbWF0aW9uLlxuICAkKCcjYnRuLXJlc2V0LWNsdXN0ZXJzJykuY2xpY2soZnVuY3Rpb24oKSB7XG5cbiAgICAkc2NvcGUucmVzZXRDbHVzdGVycygpO1xuXG4gIH0pO1xuXG5cbiAgLy9zZXQgaW5pdGlhbCBzdGF0ZS5cbiAgJCgnI2NoZWNrYm94LWhpZGUtbm9kZXMtY2x1c3RlcnMnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgTm9kZU1hbmFnZXJDbHVzdGVyLnRvZ2dsZU5vZGVWaXNpYmlsaXR5KHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBOb2RlTWFuYWdlckNsdXN0ZXIudG9nZ2xlTm9kZVZpc2liaWxpdHkoZmFsc2UpO1xuICAgICAgfVxuICB9KTtcblxuXG4gXHQvL3NldCBpbml0aWFsIHN0YXRlLlxuICAkKCcjY2hlY2tib3hfY19hbGwnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG5cbiAgICB2YXIgdG9nZ2xlVmFsID0gJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpO1xuXG5cdFx0JCgnI2NoZWNrYm94X2MwJykucHJvcCgnY2hlY2tlZCcsIHRvZ2dsZVZhbCk7XG5cdFx0JCgnI2NoZWNrYm94X2MwJykudHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0JCgnI2NoZWNrYm94X2MxJykucHJvcCgnY2hlY2tlZCcsIHRvZ2dsZVZhbCk7XG5cdFx0JCgnI2NoZWNrYm94X2MxJykudHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0JCgnI2NoZWNrYm94X2MyJykucHJvcCgnY2hlY2tlZCcsIHRvZ2dsZVZhbCk7XG5cdFx0JCgnI2NoZWNrYm94X2MyJykudHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0JCgnI2NoZWNrYm94X2MzJykucHJvcCgnY2hlY2tlZCcsIHRvZ2dsZVZhbCk7IFxuXHRcdCQoJyNjaGVja2JveF9jMycpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jNCcpLnByb3AoJ2NoZWNrZWQnLCB0b2dnbGVWYWwpO1xuXHRcdCQoJyNjaGVja2JveF9jNCcpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jNScpLnByb3AoJ2NoZWNrZWQnLCB0b2dnbGVWYWwpO1xuXHRcdCQoJyNjaGVja2JveF9jNScpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jNicpLnByb3AoJ2NoZWNrZWQnLCB0b2dnbGVWYWwpO1xuXHRcdCQoJyNjaGVja2JveF9jNicpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jNycpLnByb3AoJ2NoZWNrZWQnLCB0b2dnbGVWYWwpOyBcblx0XHQkKCcjY2hlY2tib3hfYzcnKS50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHQkKCcjY2hlY2tib3hfYzgnKS5wcm9wKCdjaGVja2VkJywgdG9nZ2xlVmFsKTtcblx0XHQkKCcjY2hlY2tib3hfYzgnKS50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHQkKCcjY2hlY2tib3hfYzknKS5wcm9wKCdjaGVja2VkJywgdG9nZ2xlVmFsKTtcblx0XHQkKCcjY2hlY2tib3hfYzknKS50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHQkKCcjY2hlY2tib3hfYzEwJykucHJvcCgnY2hlY2tlZCcsIHRvZ2dsZVZhbCk7XG5cdFx0JCgnI2NoZWNrYm94X2MxMCcpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jMTEnKS5wcm9wKCdjaGVja2VkJywgdG9nZ2xlVmFsKTsgXG5cdFx0JCgnI2NoZWNrYm94X2MxMScpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jMTInKS5wcm9wKCdjaGVja2VkJywgdG9nZ2xlVmFsKTtcblx0XHQkKCcjY2hlY2tib3hfYzEyJykudHJpZ2dlcignY2hhbmdlJyk7XG5cdFx0JCgnI2NoZWNrYm94X2MxMycpLnByb3AoJ2NoZWNrZWQnLCB0b2dnbGVWYWwpO1xuXHRcdCQoJyNjaGVja2JveF9jMTMnKS50cmlnZ2VyKCdjaGFuZ2UnKTtcblx0XHQkKCcjY2hlY2tib3hfYzE0JykucHJvcCgnY2hlY2tlZCcsIHRvZ2dsZVZhbCk7XG5cdFx0JCgnI2NoZWNrYm94X2MxNCcpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jMTUnKS5wcm9wKCdjaGVja2VkJywgdG9nZ2xlVmFsKTsgXG5cdFx0JCgnI2NoZWNrYm94X2MxNScpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jMTYnKS5wcm9wKCdjaGVja2VkJywgdG9nZ2xlVmFsKTsgXG5cdFx0JCgnI2NoZWNrYm94X2MxNicpLnRyaWdnZXIoJ2NoYW5nZScpO1xuXHRcdCQoJyNjaGVja2JveF9jMTcnKS5wcm9wKCdjaGVja2VkJywgdG9nZ2xlVmFsKTsgXG5cdFx0JCgnI2NoZWNrYm94X2MxNycpLnRyaWdnZXIoJ2NoYW5nZScpOyAgXG5cbiAgfSk7XG5cbiAgLy9zZXQgaW5pdGlhbCBzdGF0ZS5cbiAgJCgnI2NoZWNrYm94X2MwJykuY2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgIGNvbnNvbGUubG9nKFwiY2hlY2tib3ghXCIpO1xuICAgICAgaWYoJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpKSB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMCwgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMCwgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMCwgZmFsc2UpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDAsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG5cbiAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jMScpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyhcImNoZWNrYm94IVwiKTtcbiAgICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSkge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDEsIHRydWUpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDEsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDEsIGZhbHNlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxLCBmYWxzZSk7XG4gICAgICB9XG4gIH0pO1xuICAgICAgLy9zZXQgaW5pdGlhbCBzdGF0ZS5cbiAgJCgnI2NoZWNrYm94X2MyJykuY2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgIGNvbnNvbGUubG9nKFwiY2hlY2tib3ghXCIpO1xuICAgICAgaWYoJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpKSB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMiwgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMiwgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMiwgZmFsc2UpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDIsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG4gICAgICAvL3NldCBpbml0aWFsIHN0YXRlLlxuICAkKCcjY2hlY2tib3hfYzMnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigzLCB0cnVlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigzLCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGVsc2VcbiAgICAgIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigzLCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMywgZmFsc2UpO1xuICAgICAgfVxuICB9KTtcbiAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jNCcpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyhcImNoZWNrYm94IVwiKTtcbiAgICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSkge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDQsIHRydWUpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDQsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDQsIGZhbHNlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig0LCBmYWxzZSk7XG4gICAgICB9XG4gIH0pO1xuXG4gICAgICAvL3NldCBpbml0aWFsIHN0YXRlLlxuICAkKCcjY2hlY2tib3hfYzUnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig1LCB0cnVlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig1LCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGVsc2VcbiAgICAgIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig1LCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoNSwgZmFsc2UpO1xuICAgICAgfVxuICB9KTtcblxuICAgICAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jNicpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyhcImNoZWNrYm94IVwiKTtcbiAgICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSkge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDYsIHRydWUpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDYsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDYsIGZhbHNlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig2LCBmYWxzZSk7XG4gICAgICB9XG4gIH0pO1xuXG4gICAgICAgICAgLy9zZXQgaW5pdGlhbCBzdGF0ZS5cbiAgJCgnI2NoZWNrYm94X2M3JykuY2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgIGNvbnNvbGUubG9nKFwiY2hlY2tib3ghXCIpO1xuICAgICAgaWYoJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpKSB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoNywgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoNywgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoNywgZmFsc2UpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDcsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG5cbiAgICAgICAgICAvL3NldCBpbml0aWFsIHN0YXRlLlxuICAkKCcjY2hlY2tib3hfYzgnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig4LCB0cnVlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig4LCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGVsc2VcbiAgICAgIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig4LCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoOCwgZmFsc2UpO1xuICAgICAgfVxuICB9KTtcblxuICAgICAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jOScpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyhcImNoZWNrYm94IVwiKTtcbiAgICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSkge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDksIHRydWUpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDksIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDksIGZhbHNlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3Rlcig5LCBmYWxzZSk7XG4gICAgICB9XG4gIH0pO1xuXG4gICAgICAgICAgLy9zZXQgaW5pdGlhbCBzdGF0ZS5cbiAgJCgnI2NoZWNrYm94X2MxMCcpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyhcImNoZWNrYm94IVwiKTtcbiAgICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSkge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDEwLCB0cnVlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxMCwgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTAsIGZhbHNlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxMCwgZmFsc2UpO1xuICAgICAgfVxuICB9KTtcblxuICAgICAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jMTEnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxMSwgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTEsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDExLCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTEsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG5cbiAgICAgICAgICAvL3NldCBpbml0aWFsIHN0YXRlLlxuICAkKCcjY2hlY2tib3hfYzEyJykuY2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgIGNvbnNvbGUubG9nKFwiY2hlY2tib3ghXCIpO1xuICAgICAgaWYoJCh0aGlzKS5pcyhcIjpjaGVja2VkXCIpKSB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTIsIHRydWUpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDEyLCB0cnVlKTtcbiAgICAgIH1cbiAgICAgIGVsc2VcbiAgICAgIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxMiwgZmFsc2UpO1xuICAgICAgICAvL2V0YWdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDEyLCBmYWxzZSk7XG4gICAgICB9XG4gIH0pO1xuXG4gICAgICAgICAgLy9zZXQgaW5pdGlhbCBzdGF0ZS5cbiAgJCgnI2NoZWNrYm94X2MxMycpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZyhcImNoZWNrYm94IVwiKTtcbiAgICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSkge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDEzLCB0cnVlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxMywgdHJ1ZSk7XG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG4gICAgICAgIEVkZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTMsIGZhbHNlKTtcbiAgICAgICAgLy9ldGFnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxMywgZmFsc2UpO1xuICAgICAgfVxuICB9KTtcblxuICAgICAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jMTQnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxNCwgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTQsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDE0LCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTQsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG4gICAgICAgICAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jMTUnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxNSwgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTUsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDE1LCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTUsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG4gICAgICAgICAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jMTYnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxNiwgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTYsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDE2LCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTYsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG5cbiAgICAgICAgICAgICAgICAgIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveF9jMTcnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coXCJjaGVja2JveCFcIik7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcbiAgICAgICAgRWRnZU1hbmFnZXIudG9nZ2xlU2hvd0J5Q2x1c3RlcigxNywgdHJ1ZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTcsIHRydWUpO1xuICAgICAgfVxuICAgICAgZWxzZVxuICAgICAge1xuICAgICAgICBFZGdlTWFuYWdlci50b2dnbGVTaG93QnlDbHVzdGVyKDE3LCBmYWxzZSk7XG4gICAgICAgIC8vZXRhZ2VNYW5hZ2VyLnRvZ2dsZVNob3dCeUNsdXN0ZXIoMTcsIGZhbHNlKTtcbiAgICAgIH1cbiAgfSk7XG5cbn0pOyIsIlxuYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignSW50cm9DdHJsJywgZnVuY3Rpb24oJHJvb3RTY29wZSwgJHNjb3BlLCAkd2luZG93KXtcblxuXHRmdW5jdGlvbiBzZXRQYWdlTnVtKCl7XG4gICAgXHRQQUdFX05VTS52YWx1ZSA9IDA7XG4gIFx0fVxuICBcdHNldFBhZ2VOdW0oKTtcblxuXG5cdGZ1bmN0aW9uIHNldFZpc2liaWxpdHkoKXtcblx0XHQkKCcuZGF0YS12aXNpYmlsaXR5JykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuXHR9XG5cdHNldFZpc2liaWxpdHkoKTtcblxuXHR2YXIgJHNsaWRlID0gJCgnLnNsaWRlJyksXG4gICAgJHNsaWRlR3JvdXAgPSAkKCcuc2xpZGUtZ3JvdXAnKSxcbiAgICAkYnVsbGV0ID0gJCgnLmJ1bGxldCcpO1xuXG5cdHZhciBzbGlkZXNUb3RhbCA9ICgkc2xpZGUubGVuZ3RoIC0gMSksXG5cdCAgICBjdXJyZW50ID0gMCxcblx0ICAgIGlzQXV0b1NsaWRpbmcgPSBmYWxzZTtcblxuXHQkYnVsbGV0LmZpcnN0KCkuYWRkQ2xhc3MoJ2N1cnJlbnQnKTtcblxuXHQvKiByZXNldCB0aGUgZGl2IGFuZCBhbmltYXRpb24gKi9cblx0dmFyIHJlc2V0U2xpZGVzID0gZnVuY3Rpb24oKSB7XG5cdFx0Ly8gcmVsb2FkIG5vZGUgc2xpZGUgYW5kIGFuaW1hdGlvblxuXHRcdHZhciBkaXZDbG9uZV9ub2RlID0gJChcIi5zbGlkZS1ub2RlXCIpLmNsb25lKCk7IC8vIERvIHRoaXMgb24gJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7IC4uLiB9KVxuXHRcdCQoXCIuc2xpZGUtbm9kZVwiKS5odG1sKFwiTG9hZGluZyEgSWYgeW91IHNlZSB0aGlzIG1lc3NhZ2UgZm9yIGEgd2hpbGUsIHBsZWFzZSByZWZyZXNoIHRoZSBwYWdlXCIpOyAvLyBDaGFuZ2UgdGhlIGNvbnRlbnQgdGVtcG9yYXJpbHlcblxuXHRcdC8vIEFueSBjaGFuZ2VzIHRvIFwiI3NvbWVfZGl2XCIgYWZ0ZXIgdGhpcyBwb2ludCB3aWxsIGFmZmVjdCB0aGUgdmFsdWUgb2YgZGl2Q2xvbmVcblx0XHQkKFwiLnNsaWRlLW5vZGVcIikucmVwbGFjZVdpdGgoZGl2Q2xvbmVfbm9kZSk7IC8vIFJlc3RvcmUgZWxlbWVudCB3aXRoIGRpdkNsb25lIGl0c2VsZlxuXHRcblx0ICBcdC8vIHJlbG9hZCBsaW5lcyBzbGlkZSBhbmQgYW5pbWF0aW9uXG5cdCAgXHR2YXIgZGl2Q2xvbmVfbGluZXMgPSAkKFwiLnNsaWRlLWxpbmVzXCIpLmNsb25lKCk7IC8vIERvIHRoaXMgb24gJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7IC4uLiB9KVxuXG5cdFx0JChcIi5zbGlkZS1saW5lc1wiKS5odG1sKFwiTG9hZGluZyEgSWYgeW91IHNlZSB0aGlzIG1lc3NhZ2UgZm9yIGEgd2hpbGUsIHBsZWFzZSByZWZyZXNoIHRoZSBwYWdlXCIpOyAvLyBDaGFuZ2UgdGhlIGNvbnRlbnQgdGVtcG9yYXJpbHlcblxuXHRcdC8vIEFueSBjaGFuZ2VzIHRvIFwiI3NvbWVfZGl2XCIgYWZ0ZXIgdGhpcyBwb2ludCB3aWxsIGFmZmVjdCB0aGUgdmFsdWUgb2YgZGl2Q2xvbmVcblx0XHQkKFwiLnNsaWRlLWxpbmVzXCIpLnJlcGxhY2VXaXRoKGRpdkNsb25lX2xpbmVzKTsgLy8gUmVzdG9yZSBlbGVtZW50IHdpdGggZGl2Q2xvbmUgaXRzZWxmXG5cdH1cblxuXHR2YXIgY2xpY2tTbGlkZSA9IGZ1bmN0aW9uKCkge1xuXHQgIC8vc3RvcCBhdXRvIHNsaWRpbmdcblx0ICB3aW5kb3cuY2xlYXJJbnRlcnZhbChhdXRvU2xpZGUpO1xuXHQgIGlzQXV0b1NsaWRpbmcgPSBmYWxzZTtcblxuXHQgIHZhciBzbGlkZUluZGV4ID0gJGJ1bGxldC5pbmRleCgkKHRoaXMpKTtcblxuXHQgIHVwZGF0ZUluZGV4KHNsaWRlSW5kZXgpO1xuXG5cdCAgcmVzZXRTbGlkZXMoKTtcblx0fTtcblxuXHR2YXIgdXBkYXRlSW5kZXggPSBmdW5jdGlvbihjdXJyZW50U2xpZGUpIHtcblx0ICBpZihpc0F1dG9TbGlkaW5nKSB7XG5cdCAgICBpZihjdXJyZW50ID09PSBzbGlkZXNUb3RhbCkge1xuXHQgICAgICBjdXJyZW50ID0gMDtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICAgIGN1cnJlbnQrKztcblx0ICAgIH1cblx0ICB9IGVsc2Uge1xuXHQgICAgICBjdXJyZW50ID0gY3VycmVudFNsaWRlO1xuXHQgIH1cblxuXHQgICRidWxsZXQucmVtb3ZlQ2xhc3MoJ2N1cnJlbnQnKTtcblx0ICAkYnVsbGV0LmVxKGN1cnJlbnQpLmFkZENsYXNzKCdjdXJyZW50Jyk7XG5cblx0ICB0cmFuc2l0aW9uKGN1cnJlbnQpO1xuXHR9O1xuXG5cdHZhciB0cmFuc2l0aW9uID0gZnVuY3Rpb24oc2xpZGVQb3NpdGlvbikge1xuXHQgICAgJHNsaWRlR3JvdXAuYW5pbWF0ZSh7XG5cdCAgICAgICd0b3AnOiAnLScgKyBzbGlkZVBvc2l0aW9uICsgJzAwJSdcblx0ICAgIH0pO1xuXG5cdCAgICByZXNldFNsaWRlcygpO1xuXHR9O1xuXG5cdCRidWxsZXQub24oICdjbGljaycsIGNsaWNrU2xpZGUpO1xuXG5cdHZhciBhdXRvU2xpZGUgPSB3aW5kb3cuc2V0SW50ZXJ2YWwodXBkYXRlSW5kZXgsIDgwMDAwKTtcblxufSk7IiwiXG5hbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdNZXJnZVBhdGhDdHJsJywgZnVuY3Rpb24oJHJvb3RTY29wZSwgJHNjb3BlLCAkd2luZG93KXtcblxuICBmdW5jdGlvbiBzZXRQYWdlTnVtKCl7XG5cbiAgICBQQUdFX05VTS52YWx1ZSA9IDI7XG5cbiAgfVxuICBzZXRQYWdlTnVtKCk7XG5cbiAgZnVuY3Rpb24gc2V0VmlzaWJpbGl0eSgpe1xuXG4gICAgJCgnLmRhdGEtdmlzaWJpbGl0eScpLmFkZENsYXNzKCdhY3RpdmUnKTtcblxuICB9XG4gIHNldFZpc2liaWxpdHkoKTtcblxuICAkc2NvcGUudXBkYXRlTWVhbkFnZSA9IGZ1bmN0aW9uKCl7XG4gICAgaWYgKEZSQU1FLnZhbHVlID4gNDAwIHx8IFBBR0VfTlVNLnZhbHVlICE9IDEpXG4gICAgICByZXR1cm47XG5cbiAgICB2YXIgbmV3TWVhbkFnZSA9IG1hcFJhbmdlKFswLCA0MDAuMF0sIFs0OC4wLCA3OC4wXSwgRlJBTUUudmFsdWUpO1xuICAgICRzY29wZS5tZWFuQWdlLnZhbHVlID0gbmV3TWVhbkFnZTtcbiAgICAkc2NvcGUuJGFwcGx5KCk7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCRzY29wZS51cGRhdGVNZWFuQWdlKTtcbiAgfVxuICAkc2NvcGUudXBkYXRlTWVhbkFnZSgpO1xuXG4gIC8vIHJlc2V0IGFuaW1hdGlvbi5cbiAgJCgnI2J0bi1yZXNldC1tZXJnZXBhdGhzJykuY2xpY2soZnVuY3Rpb24oKSB7XG5cbiAgICAkc2NvcGUucmVzZXRNZXJnZVBhdGhzKCk7IFxuXG4gIH0pO1xuXG4gICQoJyNidG4tcnVuLW1lcmdlcGF0aHMnKS5jbGljayhmdW5jdGlvbigpIHtcblxuICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGV4dGluZm8tbWVyZ2VwYXRoaWRzXCIpLnZhbHVlO1xuICAgIHZhciBhcnJheSA9IGlucHV0LnNwbGl0KCcgJyk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKXtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG1lcmdlUGF0aElkID0gcGFyc2VJbnQoYXJyYXlbaV0pO1xuICAgICAgICBpZiAoaXNOYU4obWVyZ2VQYXRoSWQpKXtcbiAgICAgICAgICBkZWxldGUgYXJyYXlbaV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYXJyYXlbaV0gPSBtZXJnZVBhdGhJZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgY2F0Y2goZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc29sZS5sb2coJ1Nob3cgbWVyZ2VwYXRoaWRzIDogJywgYXJyYXkpO1xuICAgIFNFTEVDVEVEX01FUkdFUEFUSElEUyA9IGFycmF5O1xuICAgICRzY29wZS5tZXJnZVBhdGhJZHMudmFsdWUgPSBhcnJheTtcbiAgICAkc2NvcGUuJGFwcGx5KCk7XG4gICAgJHNjb3BlLnJlc2V0TWVyZ2VQYXRocygpO1xuICB9KVxuXG4gIC8vc2V0IGluaXRpYWwgc3RhdGUuXG4gICQoJyNjaGVja2JveC1oaWRlLW5vZGVzLW1lcmdlcGF0aHMnKS5jaGFuZ2UoZnVuY3Rpb24oKSB7XG4gICAgICBpZigkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIikpIHtcblxuICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOb2RlTWFuYWdlck1lcmdlUGF0aHMubGVuZ3RoOyBpKyspe1xuXG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBTRUxFQ1RFRF9NRVJHRVBBVEhJRFMubGVuZ3RoOyBqKyspe1xuXG4gICAgICAgICAgICBpZiAoU0VMRUNURURfTUVSR0VQQVRISURTW2pdID09PSBpKVxuICAgICAgICAgICAgICBOb2RlTWFuYWdlck1lcmdlUGF0aHNbaV0udG9nZ2xlTm9kZVZpc2liaWxpdHkodHJ1ZSk7XG5cbiAgICAgICAgICB9XG4gICAgICAgICAgXG5cbiAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOb2RlTWFuYWdlck1lcmdlUGF0aHMubGVuZ3RoOyBpKyspe1xuXG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBTRUxFQ1RFRF9NRVJHRVBBVEhJRFMubGVuZ3RoOyBqKyspe1xuXG4gICAgICAgICAgICBpZiAoU0VMRUNURURfTUVSR0VQQVRISURTW2pdID09PSBpKVxuICAgICAgICAgICAgICBOb2RlTWFuYWdlck1lcmdlUGF0aHNbaV0udG9nZ2xlTm9kZVZpc2liaWxpdHkoZmFsc2UpO1xuXG4gICAgICAgICAgfVxuXG4gICAgICAgICB9XG5cbiAgICAgIH1cbiAgfSk7XG5cbiAgLy9zZXQgaW5pdGlhbCBzdGF0ZS5cbiAgJCgnI2NoZWNrYm94LWhpZGUtbmFtZXMtbWVyZ2VwYXRocycpLmNoYW5nZShmdW5jdGlvbigpIHtcbiAgICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSkge1xuXG4gICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IE5vZGVNYW5hZ2VyTWVyZ2VQYXRocy5sZW5ndGg7IGkrKyl7XG5cbiAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IFNFTEVDVEVEX01FUkdFUEFUSElEUy5sZW5ndGg7IGorKyl7XG5cbiAgICAgICAgICAgIGlmIChTRUxFQ1RFRF9NRVJHRVBBVEhJRFNbal0gPT09IGkpXG4gICAgICAgICAgICAgIE5vZGVNYW5hZ2VyTWVyZ2VQYXRoc1tpXS50b2dnbGVOb2RlVGV4dFZpc2liaWxpdHkodHJ1ZSk7XG5cbiAgICAgICAgICB9XG5cbiAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICB9XG4gICAgICBlbHNlXG4gICAgICB7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBOb2RlTWFuYWdlck1lcmdlUGF0aHMubGVuZ3RoOyBpKyspe1xuXG4gICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBTRUxFQ1RFRF9NRVJHRVBBVEhJRFMubGVuZ3RoOyBqKyspe1xuXG4gICAgICAgICAgICBpZiAoU0VMRUNURURfTUVSR0VQQVRISURTW2pdID09PSBpKVxuICAgICAgICAgICAgICBOb2RlTWFuYWdlck1lcmdlUGF0aHNbaV0udG9nZ2xlTm9kZVRleHRWaXNpYmlsaXR5KGZhbHNlKTtcblxuICAgICAgICAgIH1cblxuICAgICAgICAgfVxuXG4gICAgICB9XG4gIH0pO1xuICBcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==